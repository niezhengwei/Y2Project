<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE hibernate-configuration PUBLIC
        "-//Hibernate/Hibernate Configuration DTD 3.0//EN"
        "http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd">
<hibernate-configuration>
    <session-factory>
        <!--数据库连接四要素-->
        <property name="hibernate.connection.driver_class">com.mysql.jdbc.Driver</property>
        <property name="hibernate.connection.url">jdbc:mysql://localhost:3306/table</property>
        <property name="hibernate.connection.username">root</property>
        <property name="hibernate.connection.password">123456</property>

        <!--是否显示底层生成的sql语句-->
        <property name="show_sql">true</property>

        <!--是否格式化SQL-->
        <property name="format_sql">false</property>
        <!--hbm2ddl   就是把xx.hbm.xml文件中的配置生成数据库中DDL（数据定义语言）
              create:  每次运行都会删除 上次生成的表,还会创建新的！
              update: 没有表会自动创建，有表就增加数据！
              validate: 如果hbm文件和数据库中的字段对应 就会新增，
                        否则抛出异常！
             create-drop:  每次运行都会删除 上次生成的表,前提是sessionFactory关闭
  -->
        <!--update 没有表创建表-->
        <property name="hbm2ddl.auto">update</property>
        
        <property name="current_session_context_class">thread</property>
        <!--<property name="cache.use_second_level_cache">true</property>
        <property name="cache.provider_class">org.hibernate.cache.EhCacheProvider</property>-->

        <!--读取到小配置中的文件-->
        <mapping resource="cn/happy/hibernate/entity/Teacher.hbm.xml"></mapping>
        <mapping resource="cn/happy/hibernate/entity/District.hbm.xml"></mapping>
        <mapping resource="cn/happy/hibernate/entity/Street.hbm.xml"></mapping>
        <mapping resource="cn/happy/hibernate/entity/Dept.hbm.xml"></mapping>
        <mapping resource="cn/happy/hibernate/entity/Emp.hbm.xml"></mapping>



    </session-factory>



</hibernate-configuration>